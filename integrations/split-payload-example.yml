category: ""
configPages:
  - elements:
      - type: configVar
        value: Prismatic Connection
    name: Configuration
    tagline: ""
defaultInstanceProfile: Default Instance Profile
definitionVersion: 7
description: ""
documentation: >-
  ## Split Payload Example


  This example integration pulls down 500 records from an API, splits them into
  50-record "chunks", and then dispatches the 50-record chunks to a sibling flow
  for processing in parallel.


  The integration then waits for each execution to complete. Once it recognizes
  that the sibling flow has completed its execution, it fetches the execution's
  step results and collects all step results into a single array.


  This illustrates one strategy you can use to process large sets of data in
  parallel.
endpointType: flow_specific
flows:
  - description: ""
    endpointSecurityType: customer_optional
    isSynchronous: false
    name: Main Flow
    steps:
      - action:
          key: webhook
          component:
            isPublic: true
            key: webhook-triggers
            version: LATEST
        description: ""
        inputs:
          body:
            type: value
            value: ""
          contentType:
            type: value
            value: ""
          headers:
            type: complex
            value: []
          statusCode:
            type: value
            value: ""
        isTrigger: true
        name: Integration Trigger
      - action:
          key: httpGet
          component:
            isPublic: true
            key: http
            version: LATEST
        description: ""
        inputs:
          connection:
            type: configVar
            value: ""
          debugRequest:
            type: value
            value: "false"
          headers:
            type: complex
            value: []
          ignoreSslErrors:
            type: value
            value: "false"
          includeFullResponse:
            type: value
            value: "false"
          maxRetries:
            type: value
            value: "0"
          queryParams:
            type: complex
            value: []
          responseType:
            type: value
            value: json
          retryDelayMS:
            type: value
            value: "0"
          retryOnAllErrors:
            type: value
            value: "false"
          timeout:
            type: value
            value: ""
          url:
            type: value
            value: "https://jsonplaceholder.typicode.com/comments"
          useExponentialBackoff:
            type: value
            value: "false"
        name: GET Request
      - action:
          key: chunks
          component:
            isPublic: true
            key: collection-tools
            version: LATEST
        description: ""
        inputs:
          listInput:
            type: reference
            value: getRequest.results
          numberInput:
            type: value
            value: "50"
        name: Chunks
      - action:
          key: loopOverItems
          component:
            isPublic: true
            key: loop
            version: LATEST
        description: ""
        inputs:
          items:
            type: reference
            value: chunks.results
        name: Loop Over Items
        steps:
          - action:
              key: invokeFlow
              component:
                isPublic: true
                key: cross-flow
                version: LATEST
            description: ""
            inputs:
              data:
                type: reference
                value: loopOverItems.currentItem
              flowName:
                type: value
                value: Process Records
            name: Invoke Flow
      - action:
          key: loopOverItems
          component:
            isPublic: true
            key: loop
            version: LATEST
        description: ""
        inputs:
          items:
            type: reference
            value: loopOverItems.results
        name: Loop Over Executions
        steps:
          - action:
              key: loopNTimes
              component:
                isPublic: true
                key: loop
                version: LATEST
            description: ""
            inputs:
              iterationCount:
                type: value
                value: "5"
            name: Loop N Times
            steps:
              - action:
                  key: rawRequest
                  component:
                    isPublic: true
                    key: prismatic
                    version: LATEST
                description: ""
                inputs:
                  connection:
                    type: configVar
                    value: Prismatic Connection
                  query:
                    type: value
                    value: >-
                      query myGetExecutionResults($executionId: ID!, $stepName:
                      String!) {
                        executionResult(id: $executionId) {
                          id
                          endedAt
                          stepResults(displayStepName: $stepName) {
                            nodes {
                              resultsUrl
                            }
                          }
                        }
                      }
                  variables:
                    type: complex
                    value:
                      - name: stepName
                        type: value
                        value: Loop Over Items
                      - name: executionId
                        type: reference
                        value: loopOverExecutions.currentItem.executionId
                name: Raw GraphQL Request
              - action:
                  key: branchOnExpression
                  component:
                    isPublic: true
                    key: branch
                    version: LATEST
                branches:
                  - name: Execution Finished?
                    steps:
                      - action:
                          key: httpGet
                          component:
                            isPublic: true
                            key: http
                            version: LATEST
                        description: ""
                        inputs:
                          connection:
                            type: configVar
                            value: ""
                          debugRequest:
                            type: value
                            value: "false"
                          headers:
                            type: complex
                            value: []
                          ignoreSslErrors:
                            type: value
                            value: "false"
                          includeFullResponse:
                            type: value
                            value: "false"
                          maxRetries:
                            type: value
                            value: "0"
                          queryParams:
                            type: complex
                            value: []
                          responseType:
                            type: value
                            value: binary
                          retryDelayMS:
                            type: value
                            value: "0"
                          retryOnAllErrors:
                            type: value
                            value: "false"
                          timeout:
                            type: value
                            value: ""
                          url:
                            type: reference
                            value: >-
                              rawGraphqlRequest.results.data.data.executionResult.stepResults.nodes.0.resultsUrl
                          useExponentialBackoff:
                            type: value
                            value: "false"
                        name: GET Request 2
                      - action:
                          key: decodeMessage
                          component:
                            isPublic: true
                            key: messagepack
                            version: LATEST
                        description: ""
                        inputs:
                          message:
                            type: reference
                            value: getRequest2.results
                        name: Decode
                      - action:
                          key: appendExecutionValueToList
                          component:
                            isPublic: true
                            key: persist-data
                            version: LATEST
                        description: ""
                        inputs:
                          keyInput:
                            type: value
                            value: myResults
                          valueInput:
                            type: reference
                            value: decode.results.data
                        name: Execution - Append Value To List
                      - action:
                          key: breakLoop
                          component:
                            isPublic: true
                            key: loop
                            version: LATEST
                        description: ""
                        inputs: {}
                        name: Break Loop
                  - name: Else
                    steps:
                      - action:
                          key: sleep
                          component:
                            isPublic: true
                            key: sleep
                            version: LATEST
                        description: ""
                        inputs:
                          ms:
                            type: value
                            value: "1000"
                        name: Sleep
                description: ""
                inputs:
                  conditions:
                    type: complex
                    value:
                      - name: Execution Finished?
                        type: complex
                        value:
                          - and
                          - - exists
                            - name: ""
                              type: reference
                              value: >-
                                rawGraphqlRequest.results.data.data.executionResult.endedAt
                name: Branch on Expression
      - action:
          key: getExecutionValue
          component:
            isPublic: true
            key: persist-data
            version: LATEST
        description: ""
        inputs:
          defaultValueInput:
            type: value
            value: ""
          keyInput:
            type: value
            value: myResults
        name: Execution - Get Value
      - action:
          key: flatten
          component:
            isPublic: true
            key: collection-tools
            version: LATEST
        description: ""
        inputs:
          listInput:
            type: reference
            value: executionGetValue.results
        name: Flatten
  - description: ""
    endpointSecurityType: customer_optional
    isSynchronous: false
    name: Process Records
    steps:
      - action:
          key: crossFlow
          component:
            isPublic: true
            key: cross-flow
            version: LATEST
        description: ""
        inputs: {}
        isTrigger: true
        name: Flow 2 Trigger
      - action:
          key: loopOverItems
          component:
            isPublic: true
            key: loop
            version: LATEST
        description: ""
        inputs:
          items:
            type: reference
            value: flow2Trigger.results.body.data
        name: Loop Over Items
        steps:
          - action:
              key: upperCase
              component:
                isPublic: true
                key: text-manipulation
                version: LATEST
            description: Capitalize comment bodies
            inputs:
              text:
                type: reference
                value: loopOverItems.currentItem.body
            name: Upper Case
name: Split payload example
requiredConfigVars:
  - connection:
      key: apiKey
      component:
        isPublic: true
        key: prismatic
        version: LATEST
    dataType: connection
    inputs:
      apiKey:
        type: value
        value: ""
    key: Prismatic Connection
    onPremiseConnectionConfig: disallowed
    orgOnly: false
